/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ProgramShop;

import java.awt.Font;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import shopmanage.CustomerInformation;
import shopmanage.CustomerModel;

/**
 *
 * @author DELL
 */
public class CustomerMenu extends javax.swing.JFrame {

    //declare variable
    Vector<String> header = new Vector<>();
    DefaultTableModel dtm = new DefaultTableModel();
    ArrayList<CustomerInformation> cus;
    CustomerModel cm;

    /**
     * Creates new form CustomerMenu
     */
    public CustomerMenu() throws Exception {
        initComponents();
        dtm = (DefaultTableModel) this.tbCustomer.getModel();
        cm = new CustomerModel();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/hinh/customer.png")));//set icon for program
        tbCustomer.getTableHeader().setFont(new Font("Tagoma", Font.CENTER_BASELINE, 20));//set icon for program
        tbCustomer.setRowHeight(30);//set height table row
        loadData();//load data
    }

    /**
     * load dat to table
     *
     * @throws Exception
     */
    public void loadData() throws Exception {
        dtm.setRowCount(0);
        cus = new ArrayList<>();
        cus = cm.loadCustomer();
        for (int i = 0; i < cus.size(); i++) {
            Object[] row = {cus.get(i).getCid(), cus.get(i).getCname(), cus.get(i).getCphone(), cus.get(i).getCemail()};
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlAll = new javax.swing.JPanel();
        pnlInformation = new javax.swing.JPanel();
        lblCustomerID = new javax.swing.JLabel();
        lblCustomerName = new javax.swing.JLabel();
        lblCustomerPhone = new javax.swing.JLabel();
        lblCustomerEmail = new javax.swing.JLabel();
        txtCID = new javax.swing.JTextField();
        txtCName = new javax.swing.JTextField();
        txtCPhone = new javax.swing.JTextField();
        txtCEmail = new javax.swing.JTextField();
        btnEdit = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        pnlTable = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbCustomer = new javax.swing.JTable();
        lblTitle = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Customer Menu");

        pnlAll.setBackground(new java.awt.Color(102, 102, 102));
        pnlAll.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        pnlInformation.setBackground(new java.awt.Color(197, 209, 197));
        pnlInformation.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblCustomerID.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblCustomerID.setForeground(new java.awt.Color(51, 51, 51));
        lblCustomerID.setText("Customer ID");

        lblCustomerName.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblCustomerName.setForeground(new java.awt.Color(0, 0, 0));
        lblCustomerName.setText("Customer Name");

        lblCustomerPhone.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblCustomerPhone.setForeground(new java.awt.Color(0, 0, 0));
        lblCustomerPhone.setText("Customer Phone");

        lblCustomerEmail.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblCustomerEmail.setForeground(new java.awt.Color(0, 0, 0));
        lblCustomerEmail.setText("Customer Email");

        txtCID.setEditable(false);
        txtCID.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        txtCName.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        txtCPhone.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        txtCEmail.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        btnEdit.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hinh/edit-png-icon-blue-pencil-18.png"))); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hinh/clear-512 (1).png"))); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnAdd.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hinh/add (1).png"))); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hinh/Refresh (1).png"))); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnExit.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hinh/exit-93-458494.png"))); // NOI18N
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hinh/delete.png"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlInformationLayout = new javax.swing.GroupLayout(pnlInformation);
        pnlInformation.setLayout(pnlInformationLayout);
        pnlInformationLayout.setHorizontalGroup(
            pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInformationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlInformationLayout.createSequentialGroup()
                        .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCustomerID)
                            .addComponent(lblCustomerName)
                            .addComponent(lblCustomerEmail)
                            .addComponent(lblCustomerPhone))
                        .addGap(25, 25, 25)
                        .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlInformationLayout.createSequentialGroup()
                                .addComponent(txtCID)
                                .addGap(18, 18, 18)
                                .addComponent(btnEdit))
                            .addComponent(txtCEmail)
                            .addComponent(txtCPhone)
                            .addComponent(txtCName)))
                    .addGroup(pnlInformationLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnClear)
                        .addGap(18, 18, 18)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(77, 77, 77))
        );
        pnlInformationLayout.setVerticalGroup(
            pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInformationLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCustomerID)
                    .addComponent(txtCID, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit))
                .addGap(36, 36, 36)
                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCName, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCustomerName))
                .addGap(49, 49, 49)
                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCustomerPhone)
                    .addComponent(txtCPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCustomerEmail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnAdd)
                    .addComponent(btnClear)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnExit)
                .addContainerGap())
        );

        pnlTable.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tbCustomer.setBackground(new java.awt.Color(197, 209, 197));
        tbCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Customer ID", "Customer Name", "Customer Phone", "Customer Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbCustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbCustomerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbCustomer);
        if (tbCustomer.getColumnModel().getColumnCount() > 0) {
            tbCustomer.getColumnModel().getColumn(0).setResizable(false);
            tbCustomer.getColumnModel().getColumn(1).setResizable(false);
            tbCustomer.getColumnModel().getColumn(2).setResizable(false);
            tbCustomer.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout pnlTableLayout = new javax.swing.GroupLayout(pnlTable);
        pnlTable.setLayout(pnlTableLayout);
        pnlTableLayout.setHorizontalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 809, Short.MAX_VALUE)
        );
        pnlTableLayout.setVerticalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE)
        );

        lblTitle.setFont(new java.awt.Font("Elephant", 1, 36)); // NOI18N
        lblTitle.setText("Customer Management");

        btnLogout.setBackground(new java.awt.Color(255, 255, 255));
        btnLogout.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnLogout.setForeground(new java.awt.Color(0, 0, 0));
        btnLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hinh/exit-93-458494.png"))); // NOI18N
        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAllLayout = new javax.swing.GroupLayout(pnlAll);
        pnlAll.setLayout(pnlAllLayout);
        pnlAllLayout.setHorizontalGroup(
            pnlAllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAllLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlAllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAllLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLogout)
                        .addGap(27, 27, 27))
                    .addGroup(pnlAllLayout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(lblTitle)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlAllLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(pnlInformation, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(25, Short.MAX_VALUE))))
        );
        pnlAllLayout.setVerticalGroup(
            pnlAllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAllLayout.createSequentialGroup()
                .addGroup(pnlAllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlAllLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(btnLogout)
                        .addGap(33, 33, 33)
                        .addComponent(lblTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pnlInformation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlAllLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pnlTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlAll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * button exit
     *
     * @param evt
     */
    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnExitActionPerformed
    /**
     * button clear
     *
     * @param evt
     */
    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        txtCID.setText("");
        txtCName.setText("");
        txtCPhone.setText("");
        txtCEmail.setText("");
    }//GEN-LAST:event_btnClearActionPerformed
    /**
     * action when mouse click
     *
     * @param evt
     */
    private void tbCustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbCustomerMouseClicked
        // TODO add your handling code here:
        int select = tbCustomer.getSelectedRow();
        for (int i = 0; i < cus.size(); i++) {
            if (i == select) {
                txtCID.setText(String.valueOf(cus.get(i).getCid()));
                txtCName.setText(cus.get(i).getCname());
                txtCPhone.setText(cus.get(i).getCphone());
                txtCEmail.setText(cus.get(i).getCemail());
            }
        }
        //can't edit
        txtCName.setEnabled(false);
        txtCPhone.setEnabled(false);
        txtCEmail.setEnabled(false);
    }//GEN-LAST:event_tbCustomerMouseClicked
    /**
     * button edit
     *
     * @param evt
     */
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        //can edit
        txtCName.setEnabled(true);
        txtCPhone.setEnabled(true);
        txtCEmail.setEnabled(true);
    }//GEN-LAST:event_btnEditActionPerformed
    /**
     * button add customer
     *
     * @param evt
     */
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        String name = txtCName.getText();//get name
        String phone = txtCPhone.getText();//get phone
        String email = txtCEmail.getText();//get email
        boolean check = cm.checkEmail(email);//check email invalid
        boolean check2 = cm.checkPhone(phone);//check phone invalid
        boolean check3 = cm.checkName(name);//check name already
        if (name.equals("")) {
            JOptionPane.showMessageDialog(this, "Customer name can't be empty.", "Error", JOptionPane.ERROR_MESSAGE);//display warning message
        } else if (check3 == true) {
            JOptionPane.showMessageDialog(this, "Customer name already exist.", "Error", JOptionPane.ERROR_MESSAGE);//display warning message
        } else if (phone.equals("")) {
            JOptionPane.showMessageDialog(this, "Customer phone can't be empty.", "Error", JOptionPane.ERROR_MESSAGE);//display warning message
        } else if (check2 == false) {
            JOptionPane.showMessageDialog(this, "Customer phone is invalid.", "Error", JOptionPane.ERROR_MESSAGE);//display warning message
        } else if (email.equals("")) {
            JOptionPane.showMessageDialog(this, "Customer email can't be empty.", "Error", JOptionPane.ERROR_MESSAGE);//display warning message
        } else if (check == false) {
            JOptionPane.showMessageDialog(this, "Customer email is invalid", "Error", JOptionPane.ERROR_MESSAGE);//display warning message
        } else {
            try {
                cm.insertCustomer(name, phone, email);//insert data in database
                cus = cm.loadCustomer();//load data in array list
                loadData();//load data in table
                tbCustomer.updateUI();//reset table
                JOptionPane.showMessageDialog(this, "Add customer successfully !", "Information", JOptionPane.INFORMATION_MESSAGE);//display warning message
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Can't insert customer to list data.", "Error", JOptionPane.ERROR_MESSAGE);//display warning message
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed
    /**
     * button update customer
     *
     * @param evt
     */
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        String name = txtCName.getText();//get name
        String phone = txtCPhone.getText();//get phone
        String email = txtCEmail.getText();//get email
        int cid = Integer.parseInt(txtCID.getText());
//        int select = tbCustomer.getSelectedRow() + 1;
        boolean check = cm.checkEmail(email);//check email invalid
        boolean check2 = cm.checkPhone(phone);//check phone invalid
        boolean check3 = cm.checkName(name);//check name already
        if (name.equals("")) {
            JOptionPane.showMessageDialog(this, "Customer name can't be empty.", "Error", JOptionPane.ERROR_MESSAGE);//display warning message
        } else if (phone.equals("")) {
            JOptionPane.showMessageDialog(this, "Customer phone can't be empty.", "Error", JOptionPane.ERROR_MESSAGE);//display warning message
        } else if (check2 == false) {
            JOptionPane.showMessageDialog(this, "Customer phone is invalid.", "Error", JOptionPane.ERROR_MESSAGE);//display warning message
        } else if (email.equals("")) {
            JOptionPane.showMessageDialog(this, "Customer email can't be empty.", "Error", JOptionPane.ERROR_MESSAGE);//display warning message
        } else if (check == false) {
            JOptionPane.showMessageDialog(this, "Customer email is invalid", "Error", JOptionPane.ERROR_MESSAGE);//display warning message
        } else {
//            for (int i = 0; i <= cus.size(); i++) {
//                if (i == select) {
            try {
                System.out.println("" +cid);
                cm.updateCustomer(cid, name, phone, email);//update data in database
                JOptionPane.showMessageDialog(this, "Update customer successfully !", "Information", JOptionPane.INFORMATION_MESSAGE);//display waring message
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Can't update customer !", "Error", JOptionPane.INFORMATION_MESSAGE);//display waring message
            }
//                }
//            }
            try {
                loadData();//load data to table
                tbCustomer.updateUI();//reset table
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Can't load data of customer.", "Error", JOptionPane.ERROR_MESSAGE);//display warning message
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed
    /**
     * button logout
     *
     * @param evt
     */
    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new InterfaceShop().setVisible(true);
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed

        try {
            // TODO add your handling code here:
            cm.deleteCustomer(Integer.parseInt(txtCID.getText()));
            loadData();
        } catch (Exception ex) {
            Logger.getLogger(ProductMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new CustomerMenu().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(CustomerMenu.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCustomerEmail;
    private javax.swing.JLabel lblCustomerID;
    private javax.swing.JLabel lblCustomerName;
    private javax.swing.JLabel lblCustomerPhone;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnlAll;
    private javax.swing.JPanel pnlInformation;
    private javax.swing.JPanel pnlTable;
    private javax.swing.JTable tbCustomer;
    private javax.swing.JTextField txtCEmail;
    private javax.swing.JTextField txtCID;
    private javax.swing.JTextField txtCName;
    private javax.swing.JTextField txtCPhone;
    // End of variables declaration//GEN-END:variables
}
