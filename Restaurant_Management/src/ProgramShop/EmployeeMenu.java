/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ProgramShop;

import java.awt.Font;
import java.awt.Toolkit;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import shopmanage.AccountInformation;
import shopmanage.EmployeeInformation;
import shopmanage.EmployeeModel;

/**
 *
 * @author DELL
 */
public class EmployeeMenu extends javax.swing.JFrame {

    //declare variables
    Vector<String> header = new Vector<>();
    DefaultTableModel dtm = new DefaultTableModel();
    ArrayList<EmployeeInformation> e = new ArrayList<>();
    EmployeeModel em;

    /**
     * Creates new form EmployeeMenu
     */
    public EmployeeMenu() throws SQLException, Exception {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/hinh/employee.png")));//set icon for program
        tbEmployee.getTableHeader().setFont(new Font("Tagoma", Font.CENTER_BASELINE, 15));//set font and size for table header
        tbEmployee.setRowHeight(35);//set height table row
        dtm = (DefaultTableModel) this.tbEmployee.getModel();
        em = new EmployeeModel();
        loadData();//load data for table
    }

    /**
     * method load data
     *
     * @throws Exception
     */
    public void loadData() throws Exception {
        dtm.setRowCount(0);
        e = new ArrayList<>();//create new list 
        e = em.loadEmployee();//load data from database to array list
        for (int i = 0; i < e.size(); i++) {
            Object[] row = {e.get(i).getEid(), e.get(i).getAid(), e.get(i).geteName(), e.get(i).getePhone(), e.get(i).geteEmail(), e.get(i).geteType()};
            dtm.addRow(row);//load data for table
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlAll = new javax.swing.JPanel();
        pnlTable = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        lblPhone = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblType = new javax.swing.JLabel();
        txtEName = new javax.swing.JTextField();
        txtEPhone = new javax.swing.JTextField();
        txtEEmail = new javax.swing.JTextField();
        txtEType = new javax.swing.JTextField();
        btnClear = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        lblAccountID = new javax.swing.JLabel();
        lblEmployeeID = new javax.swing.JLabel();
        txtAID = new javax.swing.JTextField();
        txtEID = new javax.swing.JTextField();
        btnEdit = new javax.swing.JButton();
        cbbEmployeeType = new javax.swing.JComboBox<>();
        btnNewaccount = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        pnlInformation = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbEmployee = new javax.swing.JTable();
        lblTitle = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Employee Menu");

        pnlAll.setBackground(new java.awt.Color(102, 102, 102));
        pnlAll.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        pnlTable.setBackground(new java.awt.Color(197, 209, 197));
        pnlTable.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlTable.setPreferredSize(new java.awt.Dimension(429, 427));

        lblName.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblName.setForeground(new java.awt.Color(0, 0, 0));
        lblName.setText("Employee Name");

        lblPhone.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblPhone.setForeground(new java.awt.Color(0, 0, 0));
        lblPhone.setText("Employee Phone");

        lblEmail.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblEmail.setForeground(new java.awt.Color(0, 0, 0));
        lblEmail.setText("Employee Email");

        lblType.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblType.setForeground(new java.awt.Color(0, 0, 0));
        lblType.setText("Employee Type");

        txtEName.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        txtEPhone.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        txtEEmail.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        txtEType.setEditable(false);
        txtEType.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txtEType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtETypeActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hinh/clear-512 (1).png"))); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnAdd.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hinh/add (1).png"))); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hinh/update_png_1445289.png"))); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnExit.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hinh/exit-93-458494.png"))); // NOI18N
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        lblAccountID.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblAccountID.setForeground(new java.awt.Color(0, 0, 0));
        lblAccountID.setText("Account ID");

        lblEmployeeID.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblEmployeeID.setForeground(new java.awt.Color(0, 0, 0));
        lblEmployeeID.setText("Employee ID");

        txtAID.setEditable(false);
        txtAID.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txtAID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAIDActionPerformed(evt);
            }
        });

        txtEID.setEditable(false);
        txtEID.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        btnEdit.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hinh/edit-png-icon-blue-pencil-18.png"))); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        cbbEmployeeType.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        cbbEmployeeType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Manager", "Employee" }));
        cbbEmployeeType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbEmployeeTypeActionPerformed(evt);
            }
        });

        btnNewaccount.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnNewaccount.setText("New Account");
        btnNewaccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewaccountActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hinh/delete.png"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTableLayout = new javax.swing.GroupLayout(pnlTable);
        pnlTable.setLayout(pnlTableLayout);
        pnlTableLayout.setHorizontalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTableLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTableLayout.createSequentialGroup()
                        .addComponent(btnClear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnExit)
                        .addGap(25, 25, 25))
                    .addGroup(pnlTableLayout.createSequentialGroup()
                        .addGroup(pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblName)
                            .addComponent(lblType)
                            .addComponent(lblEmail)
                            .addComponent(lblPhone)
                            .addComponent(lblAccountID, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlTableLayout.createSequentialGroup()
                                .addComponent(cbbEmployeeType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtEType))
                            .addComponent(txtEName, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(pnlTableLayout.createSequentialGroup()
                                    .addComponent(txtEID, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnlTableLayout.createSequentialGroup()
                                    .addComponent(txtAID, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnNewaccount)))
                            .addComponent(txtEPhone)
                            .addComponent(txtEEmail))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pnlTableLayout.setVerticalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTableLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEID, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmployeeID)
                    .addComponent(btnEdit))
                .addGap(18, 18, 18)
                .addGroup(pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAID, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNewaccount, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAccountID))
                .addGap(25, 25, 25)
                .addGroup(pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEName, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblName))
                .addGap(28, 28, 28)
                .addGroup(pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPhone))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmail)
                    .addComponent(txtEEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblType)
                    .addComponent(cbbEmployeeType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEType, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClear)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(btnExit)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pnlInformation.setBackground(new java.awt.Color(197, 209, 197));
        pnlInformation.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        tbEmployee.setBackground(new java.awt.Color(197, 209, 197));
        tbEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Employee ID", "Account ID", "Employee Name", "Employee Phone", "Employee Email", "Employee Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbEmployeeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbEmployee);
        if (tbEmployee.getColumnModel().getColumnCount() > 0) {
            tbEmployee.getColumnModel().getColumn(0).setResizable(false);
            tbEmployee.getColumnModel().getColumn(1).setResizable(false);
            tbEmployee.getColumnModel().getColumn(2).setResizable(false);
            tbEmployee.getColumnModel().getColumn(3).setResizable(false);
            tbEmployee.getColumnModel().getColumn(4).setResizable(false);
            tbEmployee.getColumnModel().getColumn(5).setResizable(false);
        }

        javax.swing.GroupLayout pnlInformationLayout = new javax.swing.GroupLayout(pnlInformation);
        pnlInformation.setLayout(pnlInformationLayout);
        pnlInformationLayout.setHorizontalGroup(
            pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 777, Short.MAX_VALUE)
        );
        pnlInformationLayout.setVerticalGroup(
            pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        lblTitle.setFont(new java.awt.Font("Elephant", 1, 36)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setText("Employee Managrment");

        btnLogout.setBackground(new java.awt.Color(255, 255, 255));
        btnLogout.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnLogout.setForeground(new java.awt.Color(0, 0, 0));
        btnLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hinh/exit-93-458494.png"))); // NOI18N
        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAllLayout = new javax.swing.GroupLayout(pnlAll);
        pnlAll.setLayout(pnlAllLayout);
        pnlAllLayout.setHorizontalGroup(
            pnlAllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAllLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlAllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnLogout)
                    .addGroup(pnlAllLayout.createSequentialGroup()
                        .addComponent(pnlInformation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(pnlAllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlAllLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(pnlTable, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlAllLayout.createSequentialGroup()
                                .addGap(109, 109, 109)
                                .addComponent(lblTitle)))))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        pnlAllLayout.setVerticalGroup(
            pnlAllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAllLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlInformation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlAllLayout.createSequentialGroup()
                        .addComponent(btnLogout)
                        .addGap(27, 27, 27)
                        .addComponent(lblTitle)
                        .addGap(18, 18, 18)
                        .addComponent(pnlTable, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlAll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * action when click button clear
     *
     * @param evt
     */
    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtEName.setText("");
        txtEPhone.setText("");
        txtEEmail.setText("");
        txtEType.setText("");
        txtAID.setText("");
        txtEID.setText("");
    }//GEN-LAST:event_btnClearActionPerformed
    /**
     * button exit
     *
     * @param evt
     */
    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnExitActionPerformed
    /**
     * button add employee
     *
     * @param evt
     */
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        String name = txtEName.getText();//get name
        String phone = txtEPhone.getText();//get phone
        String email = txtEEmail.getText();//get email
        String type = txtEType.getText();//get type
        boolean check = em.checkEmail(email);//get email
        boolean check2 = em.checkPhone(phone);//get phone
        boolean check3 = em.checkName(name);//check name
        if (name.equals("")) {//check name empty
            JOptionPane.showMessageDialog(this, "Employee name can't be empty.", "Error", JOptionPane.ERROR_MESSAGE);//display warning message
        } else if (check3 == true) {//check name already exist
            JOptionPane.showMessageDialog(this, "Employee name already exist.", "Error", JOptionPane.ERROR_MESSAGE);//display warning message
        } else if (phone.equals("")) {//check phone empty
            JOptionPane.showMessageDialog(this, "Employee phone can't be empty.", "Error", JOptionPane.ERROR_MESSAGE);//display warning message
        } else if (check2 == false) {//check phone invalid
            JOptionPane.showMessageDialog(this, "Employee phone invalid.", "Error", JOptionPane.ERROR_MESSAGE);//display warning message
        } else if (email.equals("")) {//check email empty
            JOptionPane.showMessageDialog(this, "Employee email can't be empty.", "Error", JOptionPane.ERROR_MESSAGE);//display warning message
        } else if (check == false) {//check email invalid
            JOptionPane.showMessageDialog(this, "Employee email invalid.", "Error", JOptionPane.ERROR_MESSAGE);//display warning message
        } else if (type.equals("")) {//check type
            JOptionPane.showMessageDialog(this, "Employee type can't be empty.", "Error", JOptionPane.ERROR_MESSAGE);//display warning message
        } else {
            try {
                em.insertEmployee(name, phone, email, type);//insert employee 
                e = em.loadEmployee();//insert employee to database
                loadData();//load data to table
                tbEmployee.updateUI();//reset table
                JOptionPane.showMessageDialog(this, "Add employee successfully !", "Information", JOptionPane.INFORMATION_MESSAGE);//dislay waring message
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Can't insert employee to list data.", "Error", JOptionPane.ERROR_MESSAGE);//display waring message
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Can't insert employee to list data.", "Error", JOptionPane.ERROR_MESSAGE);//display warning message
            }
        }

    }//GEN-LAST:event_btnAddActionPerformed
    /**
     * button update employee
     *
     * @param evt
     */
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        String name = txtEName.getText();//get name
        String phone = txtEPhone.getText();//get phone
        String email = txtEEmail.getText();//get email
        String type = txtEType.getText();//get type
        int eid = Integer.parseInt(txtEID.getText());
//        int select = tbEmployee.getSelectedRow() + 1;//get row you click in table
        boolean check = em.checkEmail(email);//get email
        boolean check2 = em.checkPhone(phone);//get phone
        if (name.equals("")) {//check name empty
            JOptionPane.showMessageDialog(this, "Employee name can't be empty.", "Error", JOptionPane.ERROR_MESSAGE);//display warning message
        } else if (phone.equals("")) {//check phone empty
            JOptionPane.showMessageDialog(this, "Employee phone can't be empty.", "Error", JOptionPane.ERROR_MESSAGE);//display warning message
        } else if (check2 == false) {//check phone invalid
            JOptionPane.showMessageDialog(this, "Employee phone invalid.", "Error", JOptionPane.ERROR_MESSAGE);//display warning message
        } else if (email.equals("")) {//check email empty
            JOptionPane.showMessageDialog(this, "Employee email can't be empty.", "Error", JOptionPane.ERROR_MESSAGE);//display warning message
        } else if (check == false) {//check email invalid
            JOptionPane.showMessageDialog(this, "Employee email invalid.", "Error", JOptionPane.ERROR_MESSAGE);//display warning message
        } else if (type.equals("")) {//check type
            JOptionPane.showMessageDialog(this, "Employee type can't be empty.", "Error", JOptionPane.ERROR_MESSAGE);//display warning message
        } else {
//            for (int i = 0; i <= e.size(); i++) {
//                if (i == select) {
            try {
                System.out.println("" + eid);
                em.updateEmployee(eid, eid, name, phone, email, type);//update data
                JOptionPane.showMessageDialog(this, "Update employee successfully !", "Information", JOptionPane.INFORMATION_MESSAGE);//display message
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Can't update employee !", "Error", JOptionPane.INFORMATION_MESSAGE);//display waring message

            }
//                }
//            }
            try {
                loadData();//load data to table
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Can't load data of employee.", "Error", JOptionPane.ERROR_MESSAGE);
            }
            tbEmployee.updateUI();//reset table
        }
    }//GEN-LAST:event_btnUpdateActionPerformed
    /**
     * action mouse click inn table
     *
     * @param evt
     */
    private void tbEmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbEmployeeMouseClicked
        int select = tbEmployee.getSelectedRow();//number of table row you click
        for (int i = 0; i < e.size(); i++) {
            if (i == select) {
                txtEID.setText(String.valueOf(e.get(i).getEid()));//set employee id
                txtAID.setText(String.valueOf(e.get(i).getAid()));//set account id
                txtEName.setText(e.get(i).geteName());//set employee name
                txtEPhone.setText(e.get(i).getePhone());//set employee phone
                txtEEmail.setText(e.get(i).geteEmail());//set employee email
                txtEType.setText(e.get(i).geteType());//set employee type
            }
        }
        //can't edit
        txtEName.setEnabled(false);
        txtEPhone.setEnabled(false);
        txtEEmail.setEnabled(false);
        txtEType.setEnabled(false);
        cbbEmployeeType.setEnabled(false);
    }//GEN-LAST:event_tbEmployeeMouseClicked
    /**
     * nothing
     *
     * @param evt
     */
    private void txtAIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAIDActionPerformed
    /**
     * button edit
     *
     * @param evt
     */
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        //can edit
        txtEName.setEnabled(true);
        txtEPhone.setEnabled(true);
        txtEEmail.setEnabled(true);
        txtEType.setEnabled(true);
        cbbEmployeeType.setEnabled(true);
    }//GEN-LAST:event_btnEditActionPerformed
    /**
     * nothing
     *
     * @param evt
     */
    private void txtETypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtETypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtETypeActionPerformed
    /**
     * list type employee
     *
     * @param evt
     */
    private void cbbEmployeeTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbEmployeeTypeActionPerformed
        // TODO add your handling code here:
        String a = (String) cbbEmployeeType.getSelectedItem();
        txtEType.setText(a);
    }//GEN-LAST:event_cbbEmployeeTypeActionPerformed
    /**
     * button logout
     *
     * @param evt
     */
    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        new InterfaceShop().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnLogoutActionPerformed
    /**
     * button new account
     *
     * @param evt
     */
    private void btnNewaccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewaccountActionPerformed
        // TODO add your handling code here:
        new CreateNewAccount().setVisible(true);
    }//GEN-LAST:event_btnNewaccountActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            em.deleteEmployee(Integer.parseInt(txtEID.getText()));
            loadData();
        } catch (Exception ex) {
            Logger.getLogger(ProductMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new EmployeeMenu().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(EmployeeMenu.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnNewaccount;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbbEmployeeType;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAccountID;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEmployeeID;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPhone;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblType;
    private javax.swing.JPanel pnlAll;
    private javax.swing.JPanel pnlInformation;
    private javax.swing.JPanel pnlTable;
    private javax.swing.JTable tbEmployee;
    private javax.swing.JTextField txtAID;
    private javax.swing.JTextField txtEEmail;
    private javax.swing.JTextField txtEID;
    private javax.swing.JTextField txtEName;
    private javax.swing.JTextField txtEPhone;
    private javax.swing.JTextField txtEType;
    // End of variables declaration//GEN-END:variables
}
